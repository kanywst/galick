# Distributed load test configuration
# Achieve high-load testing with parallel execution across multiple Pods

galick:
  # Job configuration
  job:
    enabled: true
    parallelism: 3  # Execute with 3 Pods in parallel
    completions: 3
    restartPolicy: Never
    ttlSecondsAfterFinished: 7200  # Delete after 2 hours
    backoffLimit: 1

  # Persistence configuration
  persistence:
    enabled: true
    size: 10Gi
    accessMode: ReadWriteMany  # Allow access from multiple Pods

  # Test configuration
  config:
    default:
      environment: "load-test"
      scenario: "heavy"
      output_dir: "/data/output"

    environments:
      load-test:
        base_url: "https://api.example.com"
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer LOAD_TEST_TOKEN"

    scenarios:
      heavy:
        rate: "100/s"
        duration: "10m"
        targets:
          - "GET /api/v1/products"
          - "GET /api/v1/users"
          - "POST /api/v1/orders"
          - "PUT /api/v1/products/1"

      stress:
        rate: "200/s"
        duration: "5m"
        targets:
          - "GET /api/v1/products"
          - "GET /api/v1/search?q=test"

    report:
      formats:
        - "json"
        - "html"
      thresholds:
        p95: "1000ms"
        p99: "2000ms"
        success_rate: 95.0

  # Environment variables
  env:
    - name: GALICK_DEFAULT_SCENARIO
      value: "heavy"
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name

# Resource configuration
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

nodeSelector:
  node-type: "high-performance"

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - galick
        topologyKey: kubernetes.io/hostname
